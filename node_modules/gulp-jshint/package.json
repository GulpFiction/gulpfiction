{
  "name": "gulp-jshint",
  "description": "JSHint plugin for gulp",
  "version": "1.4.2",
  "homepage": "http://github.com/wearefractal/gulp-jshint",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/gulp-jshint.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "keywords": [
    "gulpplugin"
  ],
  "dependencies": {
    "map-stream": "~0.1.0",
    "jshint": "~2.4.3",
    "gulp-util": "~2.2.14",
    "lodash.clone": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/gulp-jshint/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/wearefractal/gulp-jshint.png?branch=master)\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-jshint</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>JSHint plugin for gulp</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.4</td>\n</tr>\n</table>\n\n## Usage\n\n```javascript\nvar jshint = require('gulp-jshint');\n\ngulp.task('lint', function() {\n  gulp.src('./lib/*.js')\n    .pipe(jshint())\n    .pipe(jshint.reporter('YOUR_REPORTER_HERE'));\n});\n```\n\n## Options\n\nPlugin options:\n\n- `fail`\n  - Default is `false`\n  - When `true` this will cause jshint to emit an error event on warnings which will exit the process with an error unless handled\n\n\nYou can pass in any other options and it passes them straight to JSHint. Look at their README for more info. You can also pass in the location of your jshintrc file as a string and it will load options from it.\n\n## Results\n\nAdds the following properties to the file object:\n\n```javascript\n  file.jshint.success = true; // or false\n  file.jshint.errorCount = 0; // number of errors returned by JSHint\n  file.jshint.results = []; // JSHint errors, see [http://jshint.com/docs/reporters/](http://jshint.com/docs/reporters/)\n  file.jshint.data = []; // JSHint returns details about implied globals, cyclomatic complexity, etc\n  file.jshint.opt = {}; // The options you passed to JSHint\n```\n\n## Reporters\n\n### JSHint reporters\n\n#### Built-in\n\nYou can choose any [JSHint reporter](https://github.com/jshint/jshint/tree/master/src/reporters)\nwhen you call\n\n```javascript\nstuff\n  .pipe(jshint())\n  .pipe(jshint.reporter('default'))\n```\n\n#### External\n\nLet's use [jshint-stylish](https://github.com/sindresorhus/jshint-stylish) as an example\n\n```javascript\nvar stylish = require('jshint-stylish');\n\nstuff\n  .pipe(jshint())\n  .pipe(jshint.reporter(stylish))\n```\n\n- OR -\n\n```javascript\nstuff\n  .pipe(jshint())\n  .pipe(jshint.reporter('jshint-stylish'))\n```\n\nJSHint plugins have no good module format so I tried to support all of them I saw in the wild. Hopefully it worked, but if a JSHint plugin isn't working with this library feel free to open an issue.\n\n### Fail Reporter\n\nDo you want the task to fail when a JSHint error happens? gulp-jshint includes a simple utility for this.\n\nThis example will log the errors using the stylish reporter, then fail if JSHint was not a success.\n\n```js\nstuff\n  .pipe(jshint())\n  .pipe(jshint.reporter('jshint-stylish'))\n  .pipe(jshint.reporter('fail'))\n```\n\n### Custom Reporters\n\nCustom reporters don't interact with this module at all. jshint will add some attributes to the file object and you can add a custom reporter downstream.\n\n```javascript\nvar jshint = require('gulp-jshint');\nvar map = require('map-stream');\n\nvar myReporter = map(function (file, cb) {\n  if (!file.jshint.success) {\n    console.log('JSHINT fail in '+file.path);\n    file.jshint.results.forEach(function (err) {\n      if (err) {\n        console.log(' '+file.path + ': line ' + err.line + ', col ' + err.character + ', code ' + err.code + ', ' + err.reason);\n      }\n    });\n  }\n  cb(null, file);\n});\n\ngulp.task('lint', function() {\n  gulp.files('./lib/*.js')\n    .pipe(jshint())\n    .pipe(myReporter);\n});\n```\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2013 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wearefractal/gulp-jshint/issues"
  },
  "_id": "gulp-jshint@1.4.2",
  "dist": {
    "shasum": "27a4a721a8c1c30f9b44256d878dc30be6f34aed"
  },
  "_from": "gulp-jshint@1.4.2",
  "_resolved": "https://registry.npmjs.org/gulp-jshint/-/gulp-jshint-1.4.2.tgz"
}
